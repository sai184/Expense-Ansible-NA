  - name: verify nodejs
    ansible.builtin.shell: type npm
    register: npm
    ignore_errors: yes

  #- name: Read npm
   # ansible.builtin.debug:
   #   msg: "{{npm}}"

  - name: installing NODEJS
    ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash
    when: npm.rc != 0

  - name: Install NodeJS
    ansible.builtin.dnf:
      name: nodejs
    when: npm.rc != 0

  - name: Copy Backend Service File
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: adding application user
    ansible.builtin.user:
      name: expense

  - name: deleting old  content
    ansible.builtin.file:
      path: /app
      state: absent

  - name: Creating  Directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download backend Code and Extract it
    ansible.builtin.unarchive:
      src:  https://expense-artifacts.s3.amazonaws.com/backend.zip
      dest: /app
      remote_src: yes

  - name: install nodejs  dependencies
    ansible.builtin.shell: npm install
    args:
      chdir: /app

  - name: Install MySQL Client
    ansible.builtin.dnf:
      name: mysql
  - name: Load Schema
    ansible.builtin.shell: mysql -h mysqldns.rdevopsb72online.online -uroot -pExpenseApp@1 < /app/schema/backend.sql

  - name: Start backend Service
    ansible.builtin.systemd:
      name: backend
      state: restarted
      enabled: yes
      daemon-reload: yes
